<?xml version="1.0" encoding="UTF-8"?>
<beans 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc 
						https://www.springframework.org/schema/mvc/spring-mvc.xsd
						http://www.springframework.org/schema/beans 
						https://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context 
						https://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/aop
						https://www.springframework.org/schema/aop/spring-aop.xsd">

	
	<!-- 로그출력 : log4j -->
	<mvc:resources mapping="/resources/**" location="/resources/" />
	
	<!-- AOP등록 -->
	<bean id="/ctlDelete" class="com.lec06.aop.AOPController" >
		<property name="aOPService" ref="MY_SVC"/>
		<!-- set함수 == name , 대신 set떼고 작성. -->
	</bean>
	<bean id="MY_SVC" class="com.lec06.aop.AOPServiceImpl" ><!-- 다형성, 자식은 부모타입을 받을 수 있다.  -->
		<property name="aOPDAO" ref="MY_DAO" />
	</bean>
	<bean id="MY_DAO" class="com.lec06.aop.AOPDAO" ></bean>

	
	<bean id="MY_ASPECT" class="com.lec06.aop.CommonAspect" />

	
	<aop:config>
	<!--  
		<aop:aspect id="MY_What_Where_When" ref="MY_ASPECT"> what : 공통 뭘 해야하는 지 안다. 			
			where : 핵심로직의 어디에 적용할지			
	    	<aop:pointcut id="MY_CUT" expression="execution(public * com.lec06.aop..*Impl.*(..))" />	
	   		<aop:before pointcut-ref="MY_CUT" method="beforeAdvice" />	when : execution(public * com.lec04..*DAO.*(..)) 실행 시, 앞? 뒤? 앞뒤? 언제 실행할지
   		</aop:aspect>
   		
		<aop:aspect id="MY_What_Where_When" ref="MY_ASPECT"> 			
			where : 핵심로직의 어디에 적용할지			
	    	<aop:pointcut id="MY_CUT" expression="execution(public * com.lec06.aop..*Impl.*(..))" />	
	   		<aop:after pointcut-ref="MY_CUT" method="afterAdvice" />				
		</aop:aspect>
	
	
		<aop:aspect id="MY_What_Where_When" ref="MY_ASPECT"> 			
	    	<aop:pointcut id="MY_CUT" expression="execution(public * com.lec06.aop..*Impl.*(..))" />	
	   		<aop:after-throwing pointcut-ref="MY_CUT" method="afterThrowingAdvice" throwing="ex" />				
		</aop:aspect>
		
		 
		<aop:aspect id="MY_What_Where_When" ref="MY_ASPECT"> 			
	    	<aop:pointcut id="MY_CUT" expression="execution(public * com.lec06.aop..*Impl.*(..))" />	
	   		<aop:after-returning pointcut-ref="MY_CUT" method="afterReturningAdvice" returning="res" />				
		</aop:aspect>
		 -->
		
		<aop:aspect id="MY_What_Where_When" ref="MY_ASPECT"> 			
	    	<!-- <aop:pointcut id="MY_CUT" expression="execution(public * com.lec06.aop..*Impl.*(..))" /> -->
	    		    	<aop:pointcut id="MY_CUT" expression="execution(public * com.lec06.aop..*DAO.*(..))" />		
	   		<aop:around pointcut-ref="MY_CUT" method="aroundAdvice" />				
		</aop:aspect>
		
		
<!-- 		<aop:advisor advice-ref="MY_ASPECT" pointcut-ref="MY_CUT"> pointcut-ref :: 한 번에 가져갈 수 있음. 			
			<aop:before method="beforeAdvice" />
		</aop:advisor> -->
		
	</aop:config>

	 <!--  ===============================[어노테이션 기반으로 동작]==================================  -->

<!--  
	<mvc:annotation-driven />
	 적용 대상 패키지 
	<context:component-scan base-package="com.lec06.aop" />
	 
	 
	web test 하려면 필요함. (웹서비스)
	<bean name="MY_IR_VIEW_RESOLVER_BEAN_NAME" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/" />value="/" 단순한 String 값만 처리 받을 때 사용
		<property name="suffix" value=".jsp" />
	</bean>
	웹에서 결과 값을 봐야해서 추가 -->

</beans>
